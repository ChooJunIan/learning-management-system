/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package login_register_design;

import java.awt.Color;
import java.awt.HeadlessException;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ianch
 */
public class Login_Form extends javax.swing.JFrame {

    /**
     * Creates new form Login_Form
     */
    public Login_Form() {
        initComponents();

        //center the form
        this.setLocationRelativeTo(null);

        //create a yellow border the jLable3
        // 0 border in the top,
        Border jpanel_title_border = BorderFactory.createMatteBorder(0, 1, 1, 1, Color.yellow);
        // set the border to the jLabel3
        jPanel4.setBorder(jpanel_title_border);

        //create an orange border for the global panel
        Border glob_panel_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.orange);
        jPanel1.setBorder(glob_panel_border);

        //create a black border for the close & minimize jLables
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black);
        jLabel1.setBorder(label_border);
        jLabel2.setBorder(label_border);

        // create border for the username and password field
        Border field_border = BorderFactory.createMatteBorder(1, 5, 1, 1, Color.white);
        jTextField1_Username.setBorder(field_border);
        jPasswordField1.setBorder(field_border);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1_Username = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1_Login = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jComboBox_Users = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Username:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Password:");

        jTextField1_Username.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField1_Username.setForeground(new java.awt.Color(153, 153, 153));
        jTextField1_Username.setText("username");
        jTextField1_Username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1_UsernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1_UsernameFocusLost(evt);
            }
        });

        jPasswordField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPasswordField1.setForeground(new java.awt.Color(153, 153, 153));
        jPasswordField1.setText("password");
        jPasswordField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusLost(evt);
            }
        });

        jButton1_Login.setBackground(new java.awt.Color(0, 84, 140));
        jButton1_Login.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24)); // NOI18N
        jButton1_Login.setForeground(new java.awt.Color(255, 255, 255));
        jButton1_Login.setText("Login");
        jButton1_Login.setBorder(new javax.swing.border.MatteBorder(null));
        jButton1_Login.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1_Login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1_LoginMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1_LoginMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1_LoginMouseExited(evt);
            }
        });
        jButton1_Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1_LoginActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Itadakimasu Training Management System");

        jComboBox_Users.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox_Users.setForeground(new java.awt.Color(153, 153, 153));
        jComboBox_Users.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Trainee", "Trainer", "Admin" }));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Select User:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 20, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jButton1_Login, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1_Username)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                            .addComponent(jComboBox_Users, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1_Username))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(jPasswordField1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_Users, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jButton1_Login, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText(" -");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel1MouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText(" X");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel2MouseExited(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(0, 204, 0));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Login");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(35, 35, 35))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)))
                .addGap(22, 22, 22)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
        Border label_border = BorderFactory.createMatteBorder(0, 1, 1, 1, Color.white);
        jLabel1.setBorder(label_border);
        jLabel1.setForeground(Color.white);
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseExited
        Border label_border = BorderFactory.createMatteBorder(0, 1, 1, 1, Color.black);
        jLabel1.setBorder(label_border);
        jLabel1.setForeground(Color.black);
    }//GEN-LAST:event_jLabel1MouseExited

    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered
        Border label_border = BorderFactory.createMatteBorder(0, 1, 1, 1, Color.white);
        jLabel2.setBorder(label_border);
        jLabel2.setForeground(Color.white);
    }//GEN-LAST:event_jLabel2MouseEntered

    private void jLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseExited
        Border label_border = BorderFactory.createMatteBorder(0, 1, 1, 1, Color.black);
        jLabel2.setBorder(label_border);
        jLabel2.setForeground(Color.black);
    }//GEN-LAST:event_jLabel2MouseExited

    private void jTextField1_UsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1_UsernameFocusGained

        // clear the textfield on focus if the text is "username"
        if (jTextField1_Username.getText().trim().toLowerCase().equals("username")) {
            jTextField1_Username.setText("");
            jTextField1_Username.setForeground(Color.black);
        }
    }//GEN-LAST:event_jTextField1_UsernameFocusGained

    private void jTextField1_UsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1_UsernameFocusLost

        // if the textfield is equal to username or empty
        // we will set the "username" text in the field
        // on focus lost event
        if (jTextField1_Username.getText().trim().equals("")
                || jTextField1_Username.getText().trim().toLowerCase().equals("username")) {
            jTextField1_Username.setText("username");
            jTextField1_Username.setForeground(new Color(153, 153, 153));
        }

    }//GEN-LAST:event_jTextField1_UsernameFocusLost

    private void jPasswordField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusGained
        // clear the password on focus if the text is "password"

        //get the password text
        String pass = String.valueOf(jPasswordField1.getPassword());

        if (pass.trim().toLowerCase().equals("password")) {
            jPasswordField1.setText("");
            jPasswordField1.setForeground(Color.black);
        }
    }//GEN-LAST:event_jPasswordField1FocusGained

    private void jPasswordField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusLost
        // if the password is equal to password or empty
        // we will set the "password" text in the field
        // on focus lost event

        //get the password text
        String pass = String.valueOf(jPasswordField1.getPassword());

        if (pass.trim().equals("")
                || pass.trim().toLowerCase().equals("username")) {
            jPasswordField1.setText("password");
            jPasswordField1.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jPasswordField1FocusLost

    private void jButton1_LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1_LoginActionPerformed

    }//GEN-LAST:event_jButton1_LoginActionPerformed

    private void jButton1_LoginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1_LoginMouseEntered
        // set jButton1_Login background
        jButton1_Login.setBackground(new Color(0, 84, 104));
    }//GEN-LAST:event_jButton1_LoginMouseEntered

    private void jButton1_LoginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1_LoginMouseExited
        // set jButton1_Login background
        jButton1_Login.setBackground(new Color(0, 84, 104));
    }//GEN-LAST:event_jButton1_LoginMouseExited

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jButton1_LoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1_LoginMouseClicked

        try {
            var username = jTextField1_Username.getText();
            var pwd = new String(jPasswordField1.getPassword());

            var role = "";
            Object selectedItem = jComboBox_Users.getSelectedItem();

            if (selectedItem == "Select") {
                //Display error
                JOptionPane.showMessageDialog(null, "Please select a role", "InfoBox: ", JOptionPane.ERROR_MESSAGE);
            } else {
                role = selectedItem.toString();
                var user = verifyLogin(username, pwd, role);
                if (user != null) {
                    //Login successful
                    //JOptionPane.showMessageDialog(null, "Login Successful", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                    User._LoginUser = user;

                    if (user.userRole == "Admin") {
                        //Display Admin
                        this.setVisible(false);
                        new GUI_Admin().setVisible(true);
                    }

                    //Display Trainer
                    if (user.userRole == "Trainer") {
                        //Display TRAINER
                        this.setVisible(false);
                        new GUI_Trainer().setVisible(true);
                    }

                    //Display Trainee
                    if (user.userRole == "Trainee") {
                        //Display TRAINEE
                        this.setVisible(false);
                        new GUI_Trainee().setVisible(true);
                    }
                } else {
                    //Login not sucessful
                    JOptionPane.showMessageDialog(null, "User not found", "InfoBox: ", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (Exception ex) {

        }

    }//GEN-LAST:event_jButton1_LoginMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(null, "Welcome", "InfoBox: ", JOptionPane.ERROR_MESSAGE);
        //Check if admin database is empty
        var users = getAllAdmin();
        if (users == null) {
            //Insert default user
            InsertDefaultUser();
        }

    }//GEN-LAST:event_formWindowOpened

    public User verifyLogin(String username, String password, String role) {

        String databaseURL = "jdbc:derby://localhost:1527/TMS";
        try ( Connection conn = DriverManager.getConnection(databaseURL, "root", "123123")) {
            Statement sta = conn.createStatement();

            if (conn != null) {
                var sql = "";
                if (role == "Admin") {
                    sql = "Select * from  ROOT.ADMINSTRATOR where ADMIN_NAME = '" + username + "' AND ADMIN_PASS = '" + password + "'";
                }
                if (role == "Trainer") {
                    sql = "Select * from  ROOT.TRAINER where TRAINER_NAME = '" + username + "' AND TRAINER_PASS = '" + password + "'";
                }
                if (role == "Trainee") {
                    sql = "Select * from  ROOT.TRAINEE where TRAINEE_NAME = '" + username + "' AND TRAINEE_PASS = '" + password + "'";
                }
                ResultSet res = sta.executeQuery(sql);

                if (res != null) {
                    if (role == "Admin") {
                        while (res.next()) {
                            User user = new User();
                            user.id = res.getInt("ADMIN_ID");
                            user.userName = res.getString("ADMIN_NAME");
                            user.userPassword = res.getString("ADMIN_PASS");
                            user.userRole = role;
                            return user;
                        }
                    } else if (role == "Trainer") {
                        while (res.next()) {
                            User user = new User();
                            user.id = res.getInt("TRAINER_ID");
                            user.userName = res.getString("TRAINER_NAME");
                            user.userPassword = res.getString("TRAINER_PASS");
                            user.userRole = role;
                            return user;
                        }
                    } else if (role == "Trainee") {
                        while (res.next()) {
                            User user = new User();
                            user.id = res.getInt("TRAINEE_ID");
                            user.userName = res.getString("TRAINEE_NAME");
                            user.userPassword = res.getString("TRAINEE_PASS");
                            user.userRole = role;
                            return user;
                        }
                    }
                }

                res.close();
                sta.close();
                conn.close();
                return null;
            }
        } catch (SQLException ex) {
            Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
        return null;
    }

    public void InsertDefaultUser() {

        String databaseURL = "jdbc:derby://localhost:1527/TMS";
        try ( Connection conn = DriverManager.getConnection(databaseURL, "root", "123123")) {
            Statement sta = conn.createStatement();

            if (conn != null) {
                String sql = "INSERT INTO Adminstrator VALUES (1, 'admin', '123123')";
                sta.executeUpdate(sql);
                sta.close();
                conn.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public List<User> getAllAdmin() {
        String databaseURL = "jdbc:derby://localhost:1527/TMS";
        List<User> users = new ArrayList<User>();
        try ( Connection conn = DriverManager.getConnection(databaseURL, "root", "123123")) {
            Statement sta = conn.createStatement();

            if (conn != null) {
                ResultSet res = sta.executeQuery(
                        "Select * from  ROOT.ADMINSTRATORS");

                if (res != null) {
                    while (res.next()) {
                        User user = new User();
                        user.id = res.getInt("ADMIN_ID");
                        user.userName = res.getString("ADMIN_NAME");
                        user.userPassword = res.getString("ADMIN_PASS");
                        user.userRole = "Adminstrator";
                        users.add(user);
                    }
                    res.close();
                    sta.close();
                    conn.close();
                    return users;
                }

                res.close();
                sta.close();
                conn.close();
                return null;
            }
        } catch (SQLException ex) {
            Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
        return null;
    }

    public User getAdminUserById(String adminId) {
        String databaseURL = "jdbc:derby://localhost:1527/TMS";
        try ( Connection conn = DriverManager.getConnection(databaseURL, "root", "123123")) {
            Statement sta = conn.createStatement();

            if (conn != null) {
                ResultSet res = sta.executeQuery("Select * from  ROOT.ADMINSTRATOR where ADMIN_ID = " + adminId);

                if (res != null) {
                    while (res.next()) {
                        User user = new User();
                        user.id = res.getInt("ADMIN_ID");
                        user.userName = res.getString("ADMIN_NAME");
                        user.userPassword = res.getString("ADMIN_PASS");
                        user.userRole = "Adminstrator";
                        res.close();
                        sta.close();
                        conn.close();
                        return user;
                    }
                }

                res.close();
                sta.close();
                conn.close();
                return null;
            }
        } catch (SQLException ex) {
            Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login_Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1_Login;
    private javax.swing.JComboBox<String> jComboBox_Users;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1_Username;
    // End of variables declaration//GEN-END:variables
}
