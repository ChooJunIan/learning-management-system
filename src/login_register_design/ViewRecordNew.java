/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package login_register_design;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Yusuf
 */
public class ViewRecordNew extends javax.swing.JFrame {

    /**
     * Creates new form ViewRecordNew
     */
    public ViewRecordNew() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        scpPrograms = new javax.swing.JScrollPane();
        listPrograms = new javax.swing.JList<>();
        btnExit = new javax.swing.JButton();
        scpTrainees = new javax.swing.JScrollPane();
        listTrainees = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 0, 51));
        setForeground(java.awt.Color.red);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(102, 0, 51));
        jPanel2.setForeground(new java.awt.Color(102, 0, 51));

        jPanel1.setBackground(new java.awt.Color(220, 0, 127));

        listPrograms.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        listPrograms.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listPrograms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listProgramsMouseClicked(evt);
            }
        });
        scpPrograms.setViewportView(listPrograms);

        btnExit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnExit.setText("EXIT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        listTrainees.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listTrainees.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listTraineesMouseClicked(evt);
            }
        });
        scpTrainees.setViewportView(listTrainees);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TRAINEES");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("PROGRAMS");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("View Training Record");

        btnView.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnView.setText("VIEW");
        btnView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViewMouseClicked(evt);
            }
        });
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scpPrograms)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scpTrainees, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
                .addGap(40, 40, 40))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(225, Short.MAX_VALUE)
                .addComponent(btnView)
                .addGap(50, 50, 50)
                .addComponent(btnExit)
                .addGap(245, 245, 245))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scpTrainees, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scpPrograms, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit)
                    .addComponent(btnView))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    DefaultListModel m = new DefaultListModel();
    private void listProgramsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listProgramsMouseClicked
        // TODO add your handling code here:
        String sel = listPrograms.getSelectedValue().toString();
        List<String> list = new ArrayList<String>();

        String databaseURL = "jdbc:derby://localhost:1527/TMS";
        try ( Connection conn = DriverManager.getConnection(databaseURL, "root", "123123")) {
            Statement sta = conn.createStatement();
            ResultSet rs = sta.executeQuery("SELECT ROOT.TRAINEE.TRAINEE_NAME\n"
                    + "FROM ROOT.TRAINEE\n"
                    + "LEFT JOIN ROOT.TRAINING_RECORD\n"
                    + "ON ROOT.TRAINING_RECORD.TRAINEE_ID = ROOT.TRAINEE.TRAINEE_ID \n"
                    + "LEFT JOIN ROOT.TRAINING_PROGRAM\n"
                    + "ON ROOT.TRAINING_RECORD.PROGRAM_ID = ROOT.TRAINING_PROGRAM.PROGRAM_ID \n"
                    + "WHERE ROOT.TRAINING_PROGRAM.PROGRAM_NAME = '" + sel + "'");
            while (rs.next()) {
                list.add(rs.getString("TRAINEE_NAME"));
            }
            if (listTrainees.getModel().getSize() == 0) {
                for (int i = 0; i < list.size(); i++) {
                    m.add(i, list.get(i));
                }
            } else {
                m.removeAllElements();
                for (int i = 0; i < list.size(); i++) {
                    m.add(i, list.get(i));
                }
            }

        } catch (Exception ex) {

        }

        listTrainees.setModel(m);

    }//GEN-LAST:event_listProgramsMouseClicked

    private void listTraineesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTraineesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_listTraineesMouseClicked

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed

        if (User._LoginUser.userRole == "Admin") {
            //Display Admin
            this.setVisible(false);
            new GUI_Admin().setVisible(true);
        }

        //Display Trainer
        if (User._LoginUser.userRole == "Trainer") {
            //Display TRAINER
            this.setVisible(false);
            new GUI_Trainer().setVisible(true);
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed

    }//GEN-LAST:event_btnViewActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if (User._LoginUser.userRole == "Admin") {
            String databaseURL = "jdbc:derby://localhost:1527/TMS";
            try ( Connection conn = DriverManager.getConnection(databaseURL, "root", "123123")) {
                Statement sta = conn.createStatement();

                var list = GetAllTrainingProgram();
                var listModel = new DefaultListModel();
                for (int i = 0; i < list.size(); i++) {
                    listModel.add(i, list.get(i));
                }
                listPrograms.setModel(listModel);

            } catch (Exception ex) {

            }
        } else if (User._LoginUser.userRole == "Trainer") {
            String databaseURL = "jdbc:derby://localhost:1527/TMS";
            try ( Connection conn = DriverManager.getConnection(databaseURL, "root", "123123")) {
                Statement sta = conn.createStatement();

                var list = GetAllTrainingProgramByTrainerID(User._LoginUser.id);
                var listModel = new DefaultListModel();
                for (int i = 0; i < list.size(); i++) {
                    listModel.add(i, list.get(i));
                }
                listPrograms.setModel(listModel);

            } catch (Exception ex) {

            }
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewMouseClicked

        String selP = "";
        String selT = "";
        if (listPrograms.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select a training program");
            this.setVisible(false);
            this.setVisible(true);
        } else if (listTrainees.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select a trainee");
            this.setVisible(false);
            this.setVisible(true);
        } else {
            selP = listPrograms.getSelectedValue();
            selT = listTrainees.getSelectedValue();
            trProgram trp1 = GetTrainingProgramByName(selP);
            trProgram._trProgram = trp1;
            trainee tr1 = GetTraineeByName(selT);
            trainee._trainee = tr1;

            JOptionPane.showMessageDialog(this, "Here is " + tr1.traineeName + "'s training record in " + trp1.programName + ".");
            RecordPageNew rcp = new RecordPageNew();
            rcp.setVisible(true);
            this.setVisible(false);
        }

    }//GEN-LAST:event_btnViewMouseClicked

    public List<String> GetAllTrainingProgram() {
        String databaseURL = "jdbc:derby://localhost:1527/TMS";
        List<String> list = new ArrayList<String>();
        try ( Connection conn = DriverManager.getConnection(databaseURL, "root", "123123")) {
            Statement sta = conn.createStatement();

            if (conn != null) {
                ResultSet res = sta.executeQuery(
                        "SELECT PROGRAM_NAME\n"
                        + "FROM TRAINING_PROGRAM");

                if (res != null) {
                    while (res.next()) {
                        var programName = res.getString("PROGRAM_NAME");
                        list.add(programName);
                    }
                    res.close();
                    sta.close();
                    conn.close();
                    return list;
                }

                res.close();
                sta.close();
                conn.close();
                return null;
            }
        } catch (SQLException ex) {
            Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
        return null;
    }

    public List<String> GetAllTrainingProgramByTrainerID(int id) {
        String databaseURL = "jdbc:derby://localhost:1527/TMS";
        List<String> list = new ArrayList<String>();
        try ( Connection conn = DriverManager.getConnection(databaseURL, "root", "123123")) {
            Statement sta = conn.createStatement();

            if (conn != null) {
                ResultSet res = sta.executeQuery(
                        "SELECT ROOT.TRAINING_PROGRAM.PROGRAM_NAME\n"
                        + "FROM ROOT.TRAINER_TRAINING_PROGRAM\n"
                        + "LEFT JOIN ROOT.TRAINING_PROGRAM\n"
                        + "ON ROOT.TRAINER_TRAINING_PROGRAM.PROGRAM_ID = ROOT.TRAINING_PROGRAM.PROGRAM_ID\n"
                        + "WHERE ROOT.TRAINER_TRAINING_PROGRAM.TRAINER_ID = " + id);

                if (res != null) {
                    while (res.next()) {
                        var programName = res.getString("PROGRAM_NAME");
                        list.add(programName);
                    }
                    res.close();
                    sta.close();
                    conn.close();
                    return list;
                }

                res.close();
                sta.close();
                conn.close();
                return null;
            }
        } catch (SQLException ex) {
            Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
        return null;
    }

    public trProgram GetTrainingProgramByName(String selP) {
        String databaseURL = "jdbc:derby://localhost:1527/TMS";
        try ( Connection conn = DriverManager.getConnection(databaseURL, "root", "123123")) {
            Statement sta = conn.createStatement();

            if (conn != null) {
                ResultSet res = sta.executeQuery("Select * from  ROOT.TRAINING_PROGRAM where PROGRAM_NAME = '" + selP + "'");

                if (res != null) {
                    while (res.next()) {
                        trProgram trprogram = new trProgram();
                        trprogram.programID = res.getInt("PROGRAM_ID");
                        trprogram.programName = res.getString("PROGRAM_NAME");
                        trprogram.programCategory = res.getString("PROGRAM_CATEGORY");

                        res.close();
                        sta.close();
                        conn.close();
                        return trprogram;
                    }
                }

                res.close();
                sta.close();
                conn.close();
                return null;
            }
        } catch (SQLException ex) {
            Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
        return null;
    }

    public trainee GetTraineeByName(String selT) {
        String databaseURL = "jdbc:derby://localhost:1527/TMS";
        try ( Connection conn = DriverManager.getConnection(databaseURL, "root", "123123")) {
            Statement sta = conn.createStatement();

            if (conn != null) {
                ResultSet res = sta.executeQuery("Select * from  ROOT.TRAINEE where TRAINEE_NAME = '" + selT + "'");

                if (res != null) {
                    while (res.next()) {
                        trainee tr1 = new trainee();
                        tr1.traineeID = res.getInt("TRAINEE_ID");
                        tr1.traineeName = res.getString("TRAINEE_NAME");
                        tr1.traineePass = res.getString("TRAINEE_PASS");

                        res.close();
                        sta.close();
                        conn.close();
                        return tr1;
                    }
                }

                res.close();
                sta.close();
                conn.close();
                return null;
            }
        } catch (SQLException ex) {
            Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewRecordNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewRecordNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewRecordNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewRecordNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewRecordNew().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JList<String> listPrograms;
    private javax.swing.JList<String> listTrainees;
    private javax.swing.JScrollPane scpPrograms;
    private javax.swing.JScrollPane scpTrainees;
    // End of variables declaration//GEN-END:variables
}
